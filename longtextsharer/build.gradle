apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
import groovy.swing.SwingBuilder

buildscript {
    ext.kotlin_version = '0.12.1218'
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:1.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

repositories {
    jcenter()
    mavenCentral()
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':longtextsharer:assembleRelease')) {

        def pass = ''
        if(System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                        title: 'Enter password', // Dialog title
                        alwaysOnTop: true, // pretty much what the name says
                        resizable: false, // Don't allow the user to resize the dialog
                        locationRelativeTo: null, // Place dialog in center of the screen
                        pack: true, // We need to pack the dialog (so it will take the size of it's children)
                        show: true // Let's show it
                ) {
                    vbox { // Put everything below each other
                        label(text: "Please enter key passphrase:")
                        input = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            pass = input.password; // Set pass variable to value of input field
                            dispose(); // Close dialog
                        })
                    } // vbox end
                } // dialog end
            } // edt end
        } else {
            pass = System.console().readPassword("\nPlease enter key passphrase: ")
            pass = new String(pass)
        }

        if(pass.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        // set signing config key passwords
        android.signingConfigs.release.storePassword = pass
        android.signingConfigs.release.keyPassword = pass

        // -----
        // Do what you need to do with pass here!
        // -----

    } // end if has task
} // end whenReady

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    signingConfigs {
        release {
            storeFile file("sign/SET_YOU_KEY.jks")
            storePassword ""
            keyAlias "SET_YOU_KEY"
            keyPassword ""
        }
    }

    defaultConfig {
        applicationId "com.newbilius.longtextsharer"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}